[{"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\index.js":"1","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\App.js":"3","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Error.js":"4","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\RegisterOccupant.js":"5","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\ManageOccupant.js":"6","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\Landing.js":"7","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\MeterManage.js":"8","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\OccupantFistPage.js":"9","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\RegisterLesson.js":"10","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\AddNewOccupant.js":"11","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\LessonFirstPage.js":"12","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\component\\Navbar.js":"13","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\Components\\NavbarOccupant.js":"14","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\Components\\Input.js":"15","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\InputPricePerUnit.js":"16","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\component\\Input.js":"17","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\ShowSelected.js":"18","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\ShowLessonInfo.js":"19","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\Input.js":"20","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\component\\Loginform.js":"21","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\NavbarLesson.js":"22","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\config\\axios.js":"23"},{"size":574,"mtime":1611466548103,"results":"24","hashOfConfig":"25"},{"size":5227,"mtime":1611466548103,"results":"26","hashOfConfig":"25"},{"size":2074,"mtime":1611466548088,"results":"27","hashOfConfig":"25"},{"size":170,"mtime":1611466548088,"results":"28","hashOfConfig":"25"},{"size":5567,"mtime":1611469900661,"results":"29","hashOfConfig":"25"},{"size":6180,"mtime":1611467322633,"results":"30","hashOfConfig":"25"},{"size":1598,"mtime":1611466548088,"results":"31","hashOfConfig":"25"},{"size":18062,"mtime":1611467569041,"results":"32","hashOfConfig":"25"},{"size":7556,"mtime":1611466548103,"results":"33","hashOfConfig":"25"},{"size":7323,"mtime":1611469437679,"results":"34","hashOfConfig":"25"},{"size":12058,"mtime":1611467303009,"results":"35","hashOfConfig":"25"},{"size":709,"mtime":1611466548088,"results":"36","hashOfConfig":"25"},{"size":443,"mtime":1611466548088,"results":"37","hashOfConfig":"25"},{"size":1006,"mtime":1611466548103,"results":"38","hashOfConfig":"25"},{"size":384,"mtime":1611466548103,"results":"39","hashOfConfig":"25"},{"size":395,"mtime":1611466548088,"results":"40","hashOfConfig":"25"},{"size":318,"mtime":1611466548088,"results":"41","hashOfConfig":"25"},{"size":387,"mtime":1611466548088,"results":"42","hashOfConfig":"25"},{"size":588,"mtime":1611466548088,"results":"43","hashOfConfig":"25"},{"size":364,"mtime":1611466548088,"results":"44","hashOfConfig":"25"},{"size":3827,"mtime":1611466548088,"results":"45","hashOfConfig":"25"},{"size":1168,"mtime":1611466548088,"results":"46","hashOfConfig":"25"},{"size":1129,"mtime":1611466548103,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6ybipi",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\index.js",[],["108","109"],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\App.js",["110"],"import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Landing from './Landing/Landing'\r\nimport Error from './Error'\r\nimport RegisterOccupant from './Occupant/RegisterOccupant'\r\nimport RegisterLesson from './Lesson/RegisterLesson'\r\nimport OccupantFirstPage from './Occupant/OccupantFistPage';\r\nimport LessonFirstPage from './Lesson/LessonFirstPage';\r\nimport AddNewOccupant from './Lesson/AddNewOccupant';\r\nimport MeterManage from './Lesson/MeterManage';\r\nimport ManageOccupant from './Lesson/ManageOccupant';\r\n\r\nfunction App() {\r\n\r\n  \r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path='/' render={() => <Landing isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />} />\r\n        <Route exact path='/registerOccupant' component={RegisterOccupant} />\r\n        <Route exact path='/registerLesson' component={RegisterLesson} />\r\n        <Route exact path='/error' component={Error} />\r\n        <Route exact path='/OccupantFirstPage' render={()=><OccupantFirstPage isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />}  />\r\n        <Route exact path='/LessonFirstPage' render={()=><LessonFirstPage isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />}  />\r\n        <Route exact path='/AddNewOccupant' render={()=><AddNewOccupant isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo}/>}/>\r\n        <Route exact path='/MeterManage' render={()=><MeterManage isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo}/>}/>\r\n        <Route exact path='/OccupantMange' render={()=><ManageOccupant isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo}/>} />\r\n        <Redirect to='/error' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Error.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\RegisterOccupant.js",["111"],"import React, { useState } from 'react'\r\nimport Input from './Components/Input'\r\nimport axios from '../../config/axios'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Navbar from '../Landing/component/Navbar'\r\n\r\nfunction RegisterOccupant() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [checkPass, setCheckPass] = useState(false);\r\n    const [checkUsernameSt, setUsernameSt] = useState(false);\r\n    const [go, setGo] = useState(false);\r\n\r\n\r\n\r\n    const textUsername = e => setUsername(e.target.value);\r\n    const textPassword = e => setPassword(e.target.value);\r\n    const textConfirmPassword = e => setConfirmPassword(e.target.value);\r\n    const textName = e => setName(e.target.value);\r\n    const textSurname = e => setSurname(e.target.value);\r\n    const textMobile = e => setMobile(e.target.value);\r\n    const textAddress = e => setAddress(e.target.value);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const submit = async () => {\r\n        // const targetId = 2;\r\n        // const result = await axios.get(`/occupant/getOccupantById/${targetId}`)\r\n        // console.log(result.data)\r\n\r\n        if (username && password && confirmPassword && name && surname && mobile && address) {\r\n            if (password !== confirmPassword) {\r\n                alert(\"your password and confirm password not match\");\r\n                setCheckPass(true)\r\n            } else {\r\n                setCheckPass(false)\r\n                const body = {\r\n                    Username: username,\r\n                    Password: password,\r\n                    Name: name,\r\n                    Surname: surname,\r\n                    Mobile: mobile,\r\n                    Address: address,\r\n                    // Photo: photo,\r\n                }\r\n                try {\r\n                    const result = await axios.post('/occupant/register', body);\r\n                    // console.log(result.data)\r\n                    alert(result.data.message)\r\n                    alert(`Your id is ${result.data.result.id}`)\r\n                    setGo(true)\r\n                } catch (error){\r\n                    console.log(error)\r\n                    alert(error)\r\n                    // alert(\"Cannot Register\")\r\n                }\r\n                // alert(\"OK\")\r\n            }\r\n        } else {\r\n            if (!username) {\r\n                alert(\"Please Enter your Username\")\r\n            }\r\n            if (!password) {\r\n                alert(\"Please Enter your Password\")\r\n            }\r\n            if (!confirmPassword) {\r\n                alert(\"Please Enter your Confirm Password\")\r\n            }\r\n            if (!name) {\r\n                alert(\"Please Enter your Name\")\r\n            }\r\n            if (!surname) {\r\n                alert(\"Please Enter your Surname\")\r\n            }\r\n            if (!mobile) {\r\n                alert(\"Please Enter your Mobile\")\r\n            }\r\n            if (!address) {\r\n                alert(\"Please Enter your Address\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const checkThisPassword = () => {\r\n        if (password !== confirmPassword) {\r\n            // alert(\"your password and confirm password not match\");\r\n            setCheckPass(true)\r\n        } else {\r\n            setCheckPass(false)\r\n        }\r\n    }\r\n\r\n\r\n    const checkUserName = async () => {\r\n        const body = {\r\n            username,\r\n        }\r\n        try {\r\n            const result = await axios.post(`/occupant/checkUsername`, body);\r\n            console.log(result.data)\r\n            if (result.data) {\r\n                setUsernameSt(false)\r\n            }\r\n        } catch {\r\n            setUsernameSt(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const logLogLog = () => {\r\n        console.log(username)\r\n        console.log(password)\r\n        console.log(confirmPassword)\r\n        console.log(name)\r\n        console.log(surname)\r\n        console.log(mobile)\r\n        console.log(address)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <h1>RegisterOccupant</h1>\r\n            <form>\r\n                <Input name=\"Username\" text={textUsername} value={username} type=\"text\" onblur={checkUserName} />{checkUsernameSt ? <div style={{ color: \"red\" }}>Invalid your username</div> : null}\r\n                <Input name=\"Password\" text={textPassword} value={password} type=\"password\" onblur={checkThisPassword} />\r\n                <Input name=\"Confirm Password\" text={textConfirmPassword} value={confirmPassword} type=\"password\" onblur={checkThisPassword} />{checkPass ? <div style={{ color: \"red\" }}>your password and confirm password are not match</div> : null}\r\n                <Input name=\"Name\" text={textName} value={name} type=\"text\" />\r\n                <Input name=\"Surname\" text={textSurname} value={surname} type=\"text\" />\r\n                <Input name=\"Mobile\" text={textMobile} value={mobile} type=\"text\" />\r\n            </form>\r\n            <div>\r\n                <div><label>Address</label></div>\r\n                <textarea onChange={textAddress} value={address} placeholder={\"Address\"}></textarea>\r\n            </div>\r\n\r\n            <button onClick={submit}>Submit</button>\r\n            {/* <button onClick={logLogLog}>Log</button> */}\r\n\r\n            {go ? <Redirect to='/'/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterOccupant\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\ManageOccupant.js",["112","113","114","115","116","117","118","119"],"import React, { useEffect, useState } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from '../../config/axios'\r\nimport ShowLessonInfo from './Components/ShowLessonInfo';\r\nimport ShowSelected from './Components/ShowSelected';\r\nimport NavbarLesson from './Components/NavbarLesson';\r\n\r\nfunction ManageOccupant(props) {\r\n\r\n\r\n    const { isLogin, setIsLogin, userInfo, setUserInfo } = props;\r\n    const [lessonData, setLessonData] = useState({});\r\n    const [year, setYear] = useState([]);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n    const [monthlyValueData, setMonthlyValueData] = useState([]);\r\n    const [pushButton, setPushButton] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        const lessonData = await axios.get(`/lessor/get/${userInfo.id}`);\r\n        setLessonData(lessonData.data.result);\r\n        // const useLessonData = lessonData.data.result;\r\n        // console.log(lessonData.data.result)\r\n    }\r\n\r\n    const fetchDataMonthlyValue = async () => {\r\n        const body = {\r\n            Year: selectedYear,\r\n            Month: selectedMonth,\r\n        }\r\n        const MonthlyValue = await axios.post(`/monthlyValue/getMonthlyValueByLessonId/${userInfo.id}`, body)\r\n        console.log(MonthlyValue.data.MonthlyValueByLessonId)\r\n        setMonthlyValueData(MonthlyValue.data.MonthlyValueByLessonId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('ACCESS_TOKEN_LESSON')) {\r\n            // console.log(\"Have ACCESS_TOKEN_LESSON\");\r\n            const user = jwtDecode(localStorage.getItem('ACCESS_TOKEN_LESSON'));\r\n            user.role = \"Lesson\";\r\n            // console.log(user)\r\n            setIsLogin(true);\r\n            setUserInfo(user);\r\n        }\r\n        genYear();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchDataMonthlyValue();\r\n    }, [userInfo])\r\n\r\n    useEffect(()=>{\r\n        fetchDataMonthlyValue();\r\n    },[pushButton, selectedMonth, selectedYear,monthlyValueData])\r\n\r\n    const genYear = () => {\r\n        const thisYear = new Date().getFullYear();\r\n        console.log(thisYear);\r\n        const genThisYear = [];\r\n        for (let i = thisYear; i >= (thisYear - 100); i--) {\r\n            genThisYear.push(i);\r\n            // console.log(i);\r\n        }\r\n        setYear(genThisYear);\r\n    }\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const handleSelectedYear = (e) => {\r\n        // console.log(e.target.value)\r\n        setSelectedYear(e.target.value);\r\n    }\r\n\r\n    const handleSelectedMonth = (e) => {\r\n        // console.log(e.target.value)\r\n        const NumberMonth = months.findIndex(item => item == e.target.value) + 1;\r\n        // console.log(NumberMonth);\r\n        setSelectedMonth(NumberMonth);\r\n    }\r\n\r\n    const PaidStatusToggle = (targetId) => {\r\n        console.log(targetId)\r\n        monthlyValueData.map(async (ele) => {\r\n            if (ele.id == targetId) {\r\n                const body = {\r\n                    PaidDate: new Date(),\r\n                    // PaidStatus: !ele.PaidStatus\r\n                    PaidStatus: true\r\n                }\r\n                await axios.patch(`/MonthlyValue//editSomeValue/${targetId}`,body)\r\n                // setPushButton(!pushButton);\r\n                setPushButton(true);\r\n            }\r\n        })\r\n        // setPushButton(!pushButton);\r\n        setPushButton(true);\r\n    }\r\n\r\n    const logLogLog = () => {\r\n        console.log({ userInfo, lessonData, selectedMonth, selectedYear });\r\n        // genYear();\r\n        // console.log(year)\r\n        // console.log(new Date().getMonth() + 1)\r\n        console.log(new Date());\r\n        const hello = monthlyValueData.map(ele => console.log(typeof(ele.PaidDate)))\r\n        const hello1 = monthlyValueData.map(ele => console.log(ele.PaidDate))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavbarLesson isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />\r\n            {/* <div>Hello ManageOccupant</div> */}\r\n            {lessonData ? <ShowLessonInfo lessonData={lessonData} /> : null}\r\n            <hr />\r\n\r\n            <ShowSelected handle={handleSelectedYear} defaultValue={selectedYear} arrValue={year} />\r\n            <ShowSelected handle={handleSelectedMonth} defaultValue={months[selectedMonth - 1]} arrValue={months} />\r\n\r\n            <hr />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Floor</th>\r\n                        <th>Room</th>\r\n                        <th>Electricity Price</th>\r\n                        <th>Water Price</th>\r\n                        <th>Total Rent Price</th>\r\n                        <th>Paid Date</th>\r\n                        <th>Status</th>\r\n                        <th>Payment</th>\r\n                    </tr>\r\n                </thead>\r\n                {monthlyValueData\r\n                    ?\r\n                    <tbody>\r\n                        {monthlyValueData.map(obj =>\r\n                            <tr key={obj.id}>\r\n                                <td>{obj.Room.Floor}</td>\r\n                                <td>{obj.Room.RoomNumber}</td>\r\n                                <td>{obj.ElectricityPrice}</td>\r\n                                <td>{obj.WaterPrice}</td>\r\n                                <td>{obj.TotalRentPrice}</td>\r\n                                <td>{obj.PaidDate}</td>\r\n                                <td>{obj.PaidStatus ? <span>Paid</span> : <span>Waiting</span>}</td>\r\n                                {obj.PaidStatus ? <td></td>  : <td><button onClick={() => PaidStatusToggle(obj.id)}>Paid</button></td>}\r\n                                \r\n                            </tr>\r\n                        )}\r\n\r\n                    </tbody>\r\n                    :\r\n                    null\r\n                }\r\n            </table>\r\n\r\n\r\n\r\n            <hr />\r\n            {/* <button onClick={logLogLog}>Log</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageOccupant\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\Landing.js",["120","121"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Input from './component/Input';\r\nimport jwtDecode from 'jwt-decode';\r\nimport LoginForm from './component/Loginform';\r\nimport Navbar from './component/Navbar';\r\n\r\nfunction Landing(props) {\r\n\r\n    const [lesson, setLesson] = useState(false);\r\n\r\n    const {isLogin, setIsLogin, userInfo, setUserInfo} = props;\r\n    \r\n    // const [isLogin, setIsLogin] = useState(false);\r\n    // const [userInfo, setUserInfo] = useState({});\r\n    // console.log(isLogin)\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <h1>Welcome to our Dorm</h1>\r\n\r\n            <span>\r\n                <span style={{ color: lesson ? \"#FFDE17\" : \"#A6A6A6\", fontSize: \"24px\" }} onClick={() => setLesson(true)}>Lessor</span>\r\n                <span style={{ color: lesson ? \"#A6A6A6\" : \"#FFDE17\", fontSize: \"24px\" }} onClick={() => setLesson(false)}>Occupant</span>\r\n            </span>\r\n\r\n            <div>\r\n                <LoginForm lesson={lesson} isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />\r\n            </div>\r\n\r\n            {lesson ?\r\n                (<div>\r\n                    <Link to='/RegisterLesson'>RegisterLessor</Link>\r\n                </div>)\r\n                :\r\n                (<div>\r\n                    <Link to='/RegisterOccupant'>RegisterOccupant</Link>\r\n                </div>)\r\n            }\r\n            {/* <button onClick={() => console.log(`You are lesson ${lesson}`)}>Log</button> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\MeterManage.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { useState, useEffect } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from '../../config/axios'\r\nimport ShowLessonInfo from './Components/ShowLessonInfo';\r\nimport ShowSelected from './Components/ShowSelected';\r\nimport InputPricePerUnit from './Components/InputPricePerUnit';\r\nimport NavbarLesson from './Components/NavbarLesson';\r\n\r\nfunction MeterManage(props) {\r\n    \r\n    const { isLogin, setIsLogin, userInfo, setUserInfo } = props;\r\n    \r\n    const [lessonData, setLessonData] = useState({});\r\n    const [year, setYear] = useState([]);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n    const [selectedMonth, setSelectMonth] = useState(new Date().getMonth() + 1);\r\n    const [monthlyValueData, setMonthlyValueData] = useState([]);\r\n    const [lastMonthlyValueData, setLastMonthlyValueData] = useState([]);\r\n    const [blur, setBlur] = useState(true)\r\n    const [textEEMeter, setTextEEMeter] = useState(\"\");\r\n    const [selectedFloor, setSelectedFloor] = useState(null)\r\n    const [floor, setFloor] =useState([])\r\n    \r\n    const initialCreateMonthlyValue = async () => {\r\n        const body = {\r\n            Month: selectedMonth,\r\n            Year: selectedYear,\r\n            WaterPricePerUnit: waterPricePerUnit,\r\n            ElectricityPricePerUnit: electricityPricePerUnit,\r\n            RentPrice: rentPrice,\r\n        }\r\n        await axios.post(`/monthlyValue/initialCreate/${userInfo.id}`, body)\r\n        setBlur(!blur)\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        // console.log(userInfo.id)\r\n        const lessonData = await axios.get(`/lessor/get/${userInfo.id}`)\r\n        setLessonData(lessonData.data.result);\r\n        // console.log(lessonData)\r\n    }\r\n\r\n    const fetchMonthlyValueData = async () => {\r\n        const body = {\r\n            Year: selectedYear,\r\n            Month: selectedMonth,\r\n            Floor: selectedFloor,\r\n        }\r\n        const monthlyValueData = await axios.post(`/MonthlyValue/getMonthlyValueByLessonId/${userInfo.id}`, body)\r\n        // console.log({result: monthlyValueData, lessonId : userInfo.id})\r\n        // console.log(monthlyValueData.data.MonthlyValueByLessonId)\r\n        const tempMonthlyValueData = monthlyValueData.data.MonthlyValueByLessonId\r\n        const monthlyValueAddEdit = tempMonthlyValueData.map(ele => {\r\n            if (ele.ElectricityMeter == null && ele.WaterMeter == null) {\r\n                return {\r\n                    ...ele,\r\n                    editThisMonthEEMeter: false,\r\n                    editThisMonthWaterMeter: false,\r\n                    editRentPrice: true,\r\n                }\r\n            }\r\n            if (ele.ElectricityMeter == null && ele.WaterMeter != null) {\r\n                return {\r\n                    ...ele,\r\n                    editThisMonthEEMeter: false,\r\n                    editThisMonthWaterMeter: true,\r\n                    editRentPrice: true,\r\n                }\r\n            }\r\n            if (ele.ElectricityMeter != null && ele.WaterMeter == null) {\r\n                return {\r\n                    ...ele,\r\n                    editThisMonthEEMeter: true,\r\n                    editThisMonthWaterMeter: false,\r\n                    editRentPrice: true,\r\n                }\r\n            }\r\n            if (ele.ElectricityMeter != null && ele.WaterMeter != null) {\r\n                return {\r\n                    ...ele,\r\n                    editThisMonthEEMeter: true,\r\n                    editThisMonthWaterMeter: true,\r\n                    editRentPrice: true,\r\n                }\r\n            }\r\n        })\r\n        setMonthlyValueData(monthlyValueAddEdit);\r\n        console.log(monthlyValueAddEdit)\r\n        // setMonthlyValueData(monthlyValueData.data.MonthlyValueByLessonId)\r\n    }\r\n\r\n\r\n\r\n    const fetchLastMonthValueData = async () => {\r\n        let lastYear;\r\n        let lastMonth;\r\n        if (selectedMonth == 1) {\r\n            lastYear = selectedYear - 1;\r\n            lastMonth = 12\r\n        } else {\r\n            lastYear = selectedYear;\r\n            lastMonth = selectedMonth - 1;\r\n        }\r\n        const body = {\r\n            Year: lastYear,\r\n            Month: lastMonth,\r\n        }\r\n        const lastMonthlyValueData = await axios.post(`/MonthlyValue/getMonthlyValueByLessonId/${userInfo.id}`, body)\r\n        setLastMonthlyValueData(lastMonthlyValueData.data.MonthlyValueByLessonId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"ACCESS_TOKEN_LESSON\")) {\r\n            const user = jwtDecode(localStorage.getItem(\"ACCESS_TOKEN_LESSON\"))\r\n            user.role = \"Lesson\";\r\n            // console.log(user)\r\n            setIsLogin(true)\r\n            setUserInfo(user)\r\n        }\r\n        genYear();\r\n        // console.log({ selectedYear, selectedMonth})\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchMonthlyValueData();\r\n        genFloor();\r\n    }, [userInfo])\r\n\r\n    useEffect(() => {\r\n        console.log({ selectedYear, selectedMonth, electricityPricePerUnit, waterPricePerUnit, monthlyValueData, lastMonthlyValueData })\r\n        fetchMonthlyValueData();\r\n        // reArrangeArray();\r\n    }, [selectedYear, selectedMonth,selectedFloor])\r\n    \r\n    useEffect(()=>{\r\n        initialCreateMonthlyValue();\r\n    },[selectedMonth])\r\n    \r\n    useEffect(()=>{\r\n        fetchMonthlyValueData();\r\n    },[blur])\r\n\r\n    const genYear = () => {\r\n        const nowYear = new Date().getFullYear();\r\n        // console.log(nowYear)\r\n        for (let i = nowYear; i > nowYear - 100; i--) {\r\n            year.push(i);\r\n        }\r\n        // console.log(year)\r\n        setYear(year)\r\n        // console.log(selectedYear)\r\n    }\r\n\r\n    const handleSelectedYear = (e) => {\r\n        // console.log(e.target.value)\r\n        setSelectedYear(e.target.value)\r\n    }\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const handleSelectedMonth = (e) => {\r\n        // console.log(e.target.value)\r\n        const monthIndex = months.findIndex(item => item == e.target.value) + 1;\r\n        // console.log(monthIndex);\r\n        setSelectMonth(monthIndex)\r\n    }\r\n\r\n    const [electricityPricePerUnit, setElectricityPricePerUnit] = useState(\"7\");\r\n    const [waterPricePerUnit, setWaterPricePerUnit] = useState(\"20\");\r\n    const [rentPrice, setRentPrice] = useState(\"4400\")\r\n\r\n    const handleElectricityPricePerUnit = (e) => {\r\n        console.log(e.target.value)\r\n        setElectricityPricePerUnit(e.target.value)\r\n    }\r\n\r\n\r\n    const handleWaterPricePerUnit = (e) => {\r\n        console.log(e.target.value)\r\n        setWaterPricePerUnit(e.target.value)\r\n    }\r\n\r\n\r\n    const handleRentPrice = (e) => {\r\n        setRentPrice(e.target.value)\r\n    }\r\n\r\n\r\n    const showLogLog = () => {\r\n        genFloor();\r\n        console.log(floor)\r\n        // console.log({ monthlyValueData, lastMonthlyValueData, newLastMonthlyValue, textEEMeter })\r\n    }\r\n\r\n\r\n    const finishedAddEEMeter = (targetId) => {\r\n        console.log(targetId)\r\n        const newMonthlyValue = [...monthlyValueData];\r\n        const newNewMonthlyValue = []\r\n        newMonthlyValue.map(async (obj) => {\r\n            if (obj.id == targetId) {\r\n                // console.log(`OK in loop ${obj.id}`)\r\n                // obj.editThisMonthEEMeter = true\r\n                // console.log(obj)\r\n                const body = {\r\n                    ElectricityMeter: textEEMeter,\r\n                }\r\n                const newValue = await axios.patch(`/monthlyValue/editSomeValue/${targetId}`, body)\r\n                // console.log(newValue.data.newEditMonthlyValue)\r\n                const newNewValue = newValue.data.newEditMonthlyValue\r\n                setBlur(!blur)\r\n                setTextEEMeter(\"\")\r\n                return newNewValue\r\n            } else {\r\n                setBlur(!blur)\r\n                return obj\r\n            }\r\n        })\r\n        // console.log(newMonthlyValue)\r\n        // setMonthlyValueData(newMonthlyValue)\r\n        // fetchMonthlyValueData()\r\n        // setTextEEMeter(\"\")\r\n        setBlur(!blur)\r\n        setTimeout(fetchMonthlyValueData, 210)\r\n    }\r\n\r\n    const textEEMeterText = (e) => {\r\n        // console.log(e.target.value)\r\n        // console.log(targetId)\r\n        setTextEEMeter(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const editAddEEMeterStatus = (targetId) => {\r\n        // console.log(targetId)\r\n        // console.log(\"Hello\")\r\n        const newMonthlyValue = [...monthlyValueData];\r\n        newMonthlyValue.map(ele => {\r\n            if (ele.id === targetId) {\r\n                // console.log(\"In if loop\")\r\n                // console.log(ele.id)\r\n                ele.editThisMonthEEMeter = false;\r\n                return ele\r\n            } else {\r\n                // console.log(\"In else Loop\")\r\n                return ele\r\n            }\r\n        })\r\n        // console.log(newMonthlyValue)\r\n        setMonthlyValueData(newMonthlyValue)\r\n    }\r\n\r\n\r\n\r\n\r\n    const [textWaterMeter, setTextWaterMeter] = useState(\"\")\r\n\r\n    const textWaterMeterText = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setTextWaterMeter(e.currentTarget.value);\r\n    }\r\n\r\n    const finishedAddWaterMeter = (targetId) => {\r\n        // console.log(targetId)\r\n        // console.log({ textWaterMeter: textWaterMeter })\r\n        const newMonthlyValue = [...monthlyValueData];\r\n        newMonthlyValue.map(async (ele) => {\r\n            if (ele.id == targetId) {\r\n                // console.log(ele.id)\r\n                const body = {\r\n                    WaterMeter: textWaterMeter,\r\n                }\r\n                const newWaterMeterValue = await axios.patch(`/MonthlyValue/editSomeValue/${targetId}`, body)\r\n                // console.log(newWaterMeterValue)\r\n                setTextWaterMeter(\"\");\r\n                // console.log(\"in If\")\r\n            }\r\n        })\r\n        // console.log(\"Now\")\r\n        setTimeout(fetchMonthlyValueData, 210)\r\n    }\r\n\r\n    const editAddWaterMeterStatus = (targetId) => {\r\n        // console.log(targetId)\r\n        const newMonthlyValue = [...monthlyValueData];\r\n        newMonthlyValue.map(ele => {\r\n            if (ele.id == targetId) {\r\n                // console.log(ele.id)\r\n                ele.editThisMonthWaterMeter = false;\r\n                return ele;\r\n            } else {\r\n                // console.log(\"in else loop\")\r\n                return ele;\r\n            }\r\n        })\r\n        setMonthlyValueData(newMonthlyValue);\r\n    }\r\n\r\n\r\n    const [textRentPrice, setTextRentPrice] = useState(\"\");\r\n\r\n    const editRentPriceStatus = (targetId) => {\r\n        console.log(targetId)\r\n        const newMonthlyValueData = monthlyValueData.map(ele => {\r\n            if (ele.id == targetId) {\r\n                ele.editRentPrice = false\r\n                return ele\r\n            } else {\r\n                return ele\r\n            }\r\n        })\r\n        console.log(newMonthlyValueData)\r\n        setMonthlyValueData(newMonthlyValueData)\r\n    }\r\n\r\n    const finishedAddRentPrice = (targetId) => {\r\n        console.log(\"sonter\")\r\n        const newMonthlyValueData = monthlyValueData.map(async (ele) => {\r\n            if (ele.id == targetId) {\r\n                const body = {\r\n                    RentPrice: textRentPrice,\r\n                }\r\n                const newRentPrice = await axios.patch(`/MonthlyValue/editSomeValue/${targetId}`,body)\r\n                setBlur(!blur)\r\n                setTextRentPrice(\"\")\r\n                return newRentPrice\r\n            } else {\r\n                setBlur(!blur)\r\n                return ele\r\n            }\r\n        })\r\n        setBlur(!blur)\r\n        // console.log(newMonthlyValueData)\r\n        // setMonthlyValueData(newMonthlyValueData)\r\n        setTimeout(fetchMonthlyValueData, 210)\r\n    }\r\n\r\n    const textRentPriceText = (e) => {\r\n        // console.log(e.currentTarget.value)\r\n        setTextRentPrice(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    const genFloor = async () => {\r\n        const body = {\r\n            Status : true,\r\n        }\r\n        const Floor = await axios.post(`/room/getFloorByLessonId/${userInfo.id}`, body);\r\n        Floor.data.setRoomFloor.unshift(\"All\")\r\n        setFloor(Floor.data.setRoomFloor);\r\n        console.log(Floor)\r\n    }\r\n    \r\n    \r\n    const handleSelectedFloor = (e) => {\r\n        console.log(e.target.value)\r\n        if(e.target.value == \"All\"){\r\n            setSelectedFloor(null)\r\n            setBlur(!blur)\r\n        }else{\r\n            setSelectedFloor(e.target.value)\r\n            setBlur(!blur)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n/****************************************************************************************Don't Use***************************************************************************************************************************************************/\r\n    const [newLastMonthlyValue, setNewLastMonthlyValue] = useState([])\r\n    const reArrangeArray = () => {\r\n        console.log(\"test\")\r\n        const newLastMonthlyValue = [...lastMonthlyValueData];\r\n        const newNewLastMonthlyValue = newLastMonthlyValue.map((obj) => ({ 'RoomId': obj.RoomId, 'ElectricityMeter': obj.ElectricityMeter, 'WaterMeter': obj.WaterMeter }))\r\n        // newLastMonthlyValue.map(({RoomId}) =>({RoomId}))\r\n        console.log(newNewLastMonthlyValue)\r\n        setNewLastMonthlyValue(newNewLastMonthlyValue)\r\n        const newMonthlyValue = [...monthlyValueData];\r\n        const newNewNewMonthlyValue = []\r\n        const newNewMonthlyValue = newMonthlyValue.map(obj => newLastMonthlyValue.map(lastObj => {\r\n            // console.log(obj.RoomId)\r\n            // console.log(lastObj.RoomId)\r\n            // console.log(lastObj.ElectricityMeter)\r\n            // console.log(lastObj.lastElectricityMeter)\r\n            if (obj.RoomId === lastObj.RoomId) {\r\n                console.log(\"In Eq Look\")\r\n                // console.log(lastObj.lastElectricityMeter)\r\n                obj.lastElectricityMeter = lastObj.ElectricityMeter;\r\n                obj.lastWaterMeter = lastObj.WaterMeter;\r\n                return newNewNewMonthlyValue.push(obj)\r\n            }\r\n            // else {\r\n            //     console.log(\"Not same Loop\")\r\n            //     return obj\r\n            // }\r\n        }))\r\n        console.log(newNewNewMonthlyValue)\r\n        setMonthlyValueData(newNewNewMonthlyValue)\r\n    }\r\n/**********************************************************************************************************************************************************************************************************/\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavbarLesson isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />\r\n            This is MeterManage\r\n            {lessonData ?\r\n                <ShowLessonInfo lessonData={lessonData} />\r\n                :\r\n                null\r\n            }\r\n            <hr />\r\n\r\n            <ShowSelected handle={handleSelectedYear} defaultValue={selectedYear} arrValue={year} />\r\n            <ShowSelected handle={handleSelectedMonth} defaultValue={months[selectedMonth - 1]} arrValue={months} />\r\n            <ShowSelected handle={handleSelectedFloor} defaultValue={selectedFloor} arrValue={floor} />\r\n\r\n            <InputPricePerUnit name=\"Electricity price per unit\" pricePerUnitValue={electricityPricePerUnit} handle={handleElectricityPricePerUnit} defaultPricePerUnit={electricityPricePerUnit} />\r\n            <InputPricePerUnit name=\"Water price per unit\" pricePerUnitValue={waterPricePerUnit} handle={handleWaterPricePerUnit} defaultPricePerUnit={waterPricePerUnit} />\r\n            <InputPricePerUnit name=\"RentPrice/month\" pricePerUnitValue={rentPrice} handle={handleRentPrice} defaultPricePerUnit={rentPrice} />\r\n\r\n            <hr />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Floor</th>\r\n                        <th>Room</th>\r\n                        <th>Rent/month</th>\r\n                        {/* <th>Last month EE meter</th> */}\r\n                        <th>This month EE meter</th>\r\n                        {/* <th>Last month Water meter</th> */}\r\n                        <th>This month Water meter</th>\r\n                        <th>Total Rent</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                {monthlyValueData ?\r\n                    <tbody>\r\n                        {monthlyValueData.map(obj =>\r\n                            <tr key={obj.id}>\r\n                                <td>{obj.Room.Floor}</td>\r\n                                <td>{obj.Room.RoomNumber}</td>\r\n                                {obj.editRentPrice ? <td onDoubleClick={() => editRentPriceStatus(obj.id)}>{obj.RentPrice}</td> : <td><input onBlur={() => finishedAddRentPrice(obj.id)} onChange={textRentPriceText}></input></td>}\r\n                                {/* <td>{obj.lastElectricityMeter}</td> */}\r\n                                {obj.editThisMonthEEMeter ? <td onDoubleClick={() => editAddEEMeterStatus(obj.id)}>{obj.ElectricityMeter}</td> : <td> <input onBlur={() => finishedAddEEMeter(obj.id)} onChange={textEEMeterText} placeholder={obj.ElectricityMeter} ></input> </td>}\r\n                                {/* <td>{obj.lastWaterMeter}</td> */}\r\n                                {obj.editThisMonthWaterMeter ? <td onDoubleClick={() => editAddWaterMeterStatus(obj.id)}>{obj.WaterMeter}</td> : <td> <input onBlur={() => finishedAddWaterMeter(obj.id)} onChange={textWaterMeterText} placeholder={obj.WaterMeter} /*placeholder={obj.id}*/></input> </td>}\r\n                                <td>{obj.TotalRentPrice}</td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </tbody>\r\n                    :\r\n                    null\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n            <hr />\r\n            {/* <button onClick={showLogLog}>log</button> */}\r\n            {/* <button onClick={reArrangeArray}>Rearrange</button> */}\r\n            {/* <button>blur</button> */}\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MeterManage\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\OccupantFistPage.js",["145","146","147","148","149","150","151"],"import React, { useEffect, useState } from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from '../../config/axios'\r\nimport { Redirect } from 'react-router-dom';\r\nimport ShowSelected from '../Lesson/Components/ShowSelected';\r\nimport NavbarOccupant from './Components/NavbarOccupant';\r\n\r\nfunction OccupantFistPage(props) {\r\n    const { isLogin, setIsLogin, userInfo, setUserInfo } = props;\r\n    const [occupantData, setOccupantData] = useState({});\r\n    const [lessonData, setLessonData] = useState({});\r\n    const [roomData, setRoomData] = useState({});\r\n    const [year, setYear] = useState([]);\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1)\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear())\r\n    const [monthlyValueData, setMonthlyValueData] = useState({})\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"ACCESS_TOKEN_OCCUPANT\")) {\r\n            setIsLogin(true);\r\n            const user = jwtDecode(localStorage.getItem(\"ACCESS_TOKEN_OCCUPANT\"))\r\n            setUserInfo(user)\r\n        }\r\n        genYear();\r\n    }, []);\r\n    \r\n    \r\n    const fetchData = async () => {\r\n        try{\r\n            const occupantData = await axios.get(`/Occupant/get/${userInfo.id}`)\r\n            setOccupantData(occupantData.data.occupantData)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchLessorData = async () => {\r\n        try{\r\n            const LessorData = await axios.get(`/lessor/data/${userInfo.id}`);\r\n            setLessonData(LessorData.data.lessonData);\r\n            setRoomData(LessorData.data.RoomData);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const fetchMonthlyValueData = async () => {\r\n        const body = {\r\n            Year: selectedYear,\r\n            Month: selectedMonth,\r\n        }\r\n        try{\r\n            const monthlyValueData = await axios.post(`MonthlyValue/getMonthlyValueDataByYearMonthOccupantId/${userInfo.id}`, body);\r\n            setMonthlyValueData(monthlyValueData.data.MonthlyValueData);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchLessorData();\r\n        fetchMonthlyValueData();\r\n    }, [userInfo])\r\n\r\n    useEffect(() => {\r\n        fetchMonthlyValueData();\r\n    }, [selectedMonth, selectedYear])\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"ACCESS_TOKEN_OCCUPANT\");\r\n        setUserInfo({})\r\n        setOccupantData({})\r\n        setIsLogin(false)\r\n    }\r\n\r\n\r\n    const genYear = () => {\r\n        const nowYear = new Date().getFullYear();\r\n        const ArrYear = [];\r\n        for (let i = nowYear; i >= nowYear - 100; i--) {\r\n            ArrYear.push(i)\r\n        }\r\n        setYear(ArrYear)\r\n    }\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const handleSelectedMonth = (e) => {\r\n        const numberMonth = months.findIndex(ele => ele == e.target.value) + 1;\r\n        setSelectedMonth(numberMonth);\r\n    }\r\n\r\n\r\n    const handleSelectedYear = (e) => {\r\n        setSelectedYear(e.target.value)\r\n    }\r\n\r\n    const logHello = () => {\r\n        console.log(occupantData.Name)\r\n    }\r\n\r\n\r\n    const logLogLog = () => {\r\n        console.log({ year, selectedYear, selectedMonth, lessonData })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavbarOccupant  isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />\r\n            <div>\r\n                <span>\r\n                    <span style={{ fontSize: \"20px\" }}>Occupant Id: &nbsp; </span>\r\n                    <span style={{ fontSize: \"28px\" }}>{userInfo.id}   &nbsp;&nbsp;</span>\r\n                    <span style={{ fontSize: \"20px\" }}>Name: &nbsp; </span>\r\n                    {occupantData ? <span style={{ fontSize: \"28px\" }}>{occupantData.Name} &nbsp; {occupantData.Surname}  &nbsp;&nbsp;</span> : null}\r\n                    <span style={{ fontSize: \"20px\" }}>Room: &nbsp; </span>\r\n                    {roomData ? <span style={{ fontSize: \"28px\" }}>{roomData.RoomNumber}   &nbsp;&nbsp;</span> : null}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <span>\r\n                    <span style={{ fontSize: \"20px\" }}>Your Lessor Id: &nbsp; </span>\r\n                    {lessonData ? <span style={{ fontSize: \"28px\" }}>{lessonData.id}   &nbsp;&nbsp;</span> : null}\r\n                    <span style={{ fontSize: \"20px\" }}>Your Dormitory Name : &nbsp; </span>\r\n                    {lessonData ? <span style={{ fontSize: \"28px\" }}>{lessonData.DormitoryName}</span> : null}\r\n                </span>\r\n            </div>\r\n\r\n\r\n\r\n            <hr />\r\n\r\n            <ShowSelected handle={handleSelectedYear} defaultValue={selectedYear} arrValue={year} />\r\n            <ShowSelected handle={handleSelectedMonth} defaultValue={months[selectedMonth - 1]} arrValue={months} />\r\n\r\n            <hr />\r\n            <span>\r\n                {monthlyValueData ?\r\n                    <>\r\n                        <span>Total rent :<strong>{monthlyValueData.TotalRentPrice}</strong> </span>\r\n                        {monthlyValueData.PaidStatus ? <span style={{ color: \"Blue\" }}>&nbsp;&nbsp;&nbsp;&nbsp;Paid</span> : <span style={{ color: \"red\" }}>&nbsp;&nbsp;&nbsp;&nbsp;Waiting</span>}\r\n                    </>\r\n                    :\r\n                    null\r\n                }\r\n            </span>\r\n            <br/>\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Unit</th>\r\n                        <th>Change</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {monthlyValueData ?\r\n                        <>\r\n                            <tr>\r\n                                <td>Rent </td>\r\n                                <td>{monthlyValueData.RentPrice / monthlyValueData.RentPrice}</td>\r\n                                <td>{monthlyValueData.RentPrice}</td>\r\n                                <td>{monthlyValueData.RentPrice}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Electricity </td>\r\n                                <td>{monthlyValueData.ElectricityPrice / monthlyValueData.ElectricityPricePerUnit}</td>\r\n                                <td>{monthlyValueData.ElectricityPricePerUnit}</td>\r\n                                <td>{monthlyValueData.ElectricityPrice}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Water </td>\r\n                                <td>{monthlyValueData.WaterPrice / monthlyValueData.WaterPricePerUnit}</td>\r\n                                <td>{monthlyValueData.WaterPricePerUnit}</td>\r\n                                <td>{monthlyValueData.WaterPrice}</td>\r\n                            </tr>\r\n                        </>\r\n                        :\r\n\r\n\r\n                        null}\r\n\r\n                </tbody>\r\n\r\n\r\n            </table>\r\n\r\n            <hr />\r\n            <div>\r\n                {/* <button onClick={logout}>Log Out</button> */}\r\n            </div>\r\n\r\n\r\n            {/* <button onClick={logLogLog}>Log</button> */}\r\n\r\n            {isLogin || occupantData ? null : <Redirect to='/' />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OccupantFistPage\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\RegisterLesson.js",["152","153"],"import React, { useState } from 'react';\r\nimport Input from './Components/Input';\r\nimport axios from '../../config/axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Navbar from '../Landing/component/Navbar';\r\n\r\nfunction RegisterLesson() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [dormName, setDormName] = useState(\"\");\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [province, setProvince] = useState(\"\");\r\n    const [postcode, setPostcode] = useState(\"\");\r\n    const [dormPhone, setDormPhone] = useState(\"\");\r\n    const [accountNumber, setAccountNumber] = useState(\"\");\r\n    const [go, setGo] = useState(false)\r\n\r\n\r\n    const [checkUsernameSame, setCheckUsernameSame] = useState(false);\r\n    const [checkPasswordConfirmPassword, setCheckPasswordConfirmPassword] = useState(true);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const textUsername = (e) => setUsername(e.target.value);\r\n    const textPassword = (e) => setPassword(e.target.value);\r\n    const textConfirmPassword = (e) => setConfirmPassword(e.target.value);\r\n    const textName = (e) => setName(e.target.value);\r\n    const textSurname = (e) => setSurname(e.target.value);\r\n    const textMobile = (e) => setMobile(e.target.value);\r\n    const textDormName = (e) => setDormName(e.target.value);\r\n    const textAddress = (e) => setAddress(e.target.value);\r\n    const textProvince = (e) => setProvince(e.target.value);\r\n    const textPostcode = (e) => setPostcode(e.target.value);\r\n    const textDormPhone = (e) => setDormPhone(e.target.value);\r\n    const textAccountNumber = (e) => setAccountNumber(e.target.value);\r\n\r\n\r\n    const submit = async () => {\r\n        // console.log(\"Submit mai kub\")\r\n        if (username && password && confirmPassword && name && surname && mobile && address && province && postcode && dormPhone && accountNumber) {\r\n            // console.log(\"OK\")\r\n            if (password !== confirmPassword) {\r\n                alert(\"Please correct your Password and Confirm Password same\");\r\n            } else {\r\n                const body = {\r\n                    Username: username,\r\n                    Password: password,\r\n                    Name: name,\r\n                    Surname: surname,\r\n                    Mobile: mobile,\r\n                    Address: address,\r\n                    Photo: province,\r\n                    DormitoryPhone: dormPhone,\r\n                    DormitoryName:dormName,\r\n                    Province: province,\r\n                    PostCode: postcode,\r\n                    BookAccount: accountNumber,\r\n                }\r\n\r\n                \r\n                try {\r\n                    const result = await axios.post('/lesson/register',body);\r\n                    // console.log(result)\r\n                    alert(result.data.message);\r\n                    alert(`Your id is ${result.data.users.id}`);\r\n                    setGo(true)\r\n                } catch {\r\n                    alert(\"Please Register again\")\r\n                    // console.log(\"Please Register again\")\r\n                    setGo(false)\r\n                }\r\n\r\n            }\r\n        } else {\r\n            // console.log(\"Please Enter ...\");\r\n            // alert(\"Please Enter ...\");\r\n            if(!username){\r\n                alert(\"Please Enter \");\r\n            }\r\n            if(!password){\r\n                alert(\"Please Enter \");\r\n            }\r\n            if(!confirmPassword){\r\n                alert(\"Please Enter confirmPassword\");\r\n            }\r\n            if(!name){\r\n                alert(\"Please Enter name\");\r\n            }\r\n            if(!surname){\r\n                alert(\"Please Enter surname\");\r\n            }\r\n            if(!dormName){\r\n                alert(\"Please Enter dormName\");\r\n            }\r\n            if(!mobile){\r\n                alert(\"Please Enter mobile\");\r\n            }\r\n            if(!address){\r\n                alert(\"Please Enter address\");\r\n            }\r\n            if(!province){\r\n                alert(\"Please Enter province\");\r\n            }\r\n            if(!postcode){\r\n                alert(\"Please Enter postcode\");\r\n            }\r\n            if(!dormPhone){\r\n                alert(\"Please Enter dormPhone\");\r\n            }\r\n            if(!accountNumber){\r\n                alert(\"Please Enter accountNumber\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const checkUsername = async () => {\r\n        const body = {\r\n            Username: username,\r\n        }\r\n        try {\r\n            const result = await axios.post('/Lesson/checkUsername', body);\r\n            // console.log(result.data.message)\r\n            setCheckUsernameSame(false)\r\n        } catch {\r\n            // console.log(\"Invalid Username\")\r\n            setCheckUsernameSame(true)\r\n        }\r\n    }\r\n\r\n    const checkConfirmPassword = () => {\r\n        if (password === confirmPassword) {\r\n            setCheckPasswordConfirmPassword(true)\r\n        } else {\r\n            setCheckPasswordConfirmPassword(false)\r\n        }\r\n    }\r\n\r\n    const logLogLog = () => {\r\n        console.log(username)\r\n        console.log(password)\r\n        console.log(confirmPassword)\r\n        console.log(name)\r\n        console.log(surname)\r\n        console.log(mobile)\r\n        console.log(dormName)\r\n        console.log(address)\r\n        console.log(province)\r\n        console.log(postcode)\r\n        console.log(dormPhone)\r\n        console.log(accountNumber)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <h1>RegisterLessor</h1>\r\n            <Input name=\"Username\" type=\"text\" text={textUsername} value={username} check={checkUsername} />{checkUsernameSame ? <div style={{ color: \"red\" }}>Invalid Username</div> : null}\r\n            <Input name=\"Password\" type=\"password\" text={textPassword} value={password} check={checkConfirmPassword} />\r\n            <Input name=\"Confirm Password\" type=\"password\" text={textConfirmPassword} value={confirmPassword} check={checkConfirmPassword} />{checkPasswordConfirmPassword ? null : <div style={{color: \"red\"}}>Password and Confirm Password are not same</div>}\r\n            <Input name=\"Name\" type=\"text\" text={textName} value={name} />\r\n            <Input name=\"Surname\" type=\"text\" text={textSurname} value={surname} />\r\n            <Input name=\"Mobile\" type=\"text\" text={textMobile} value={mobile} />\r\n            <Input name=\"Dormitory Name\" type=\"text\" text={textDormName} value={dormName} />\r\n            <Input name=\"Address\" type=\"text\" text={textAddress} value={address} />\r\n            <Input name=\"Province\" type=\"text\" text={textProvince} value={province} />\r\n            <Input name=\"Postcode\" type=\"text\" text={textPostcode} value={postcode} />\r\n            <Input name=\"Dormitory Phone Number\" type=\"text\" text={textDormPhone} value={dormPhone} />\r\n            <Input name=\"Account Number\" type=\"text\" text={textAccountNumber} value={accountNumber} />\r\n\r\n\r\n\r\n            <button onClick={submit}>Submit</button>\r\n            {/* <button onClick={logLogLog}>log</button> */}\r\n\r\n\r\n           {go ? <Redirect to='/'/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterLesson\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\AddNewOccupant.js",["154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from '../../config/axios'\r\nimport './AddNewOccupant.css'\r\nimport ShowLessonInfo from './Components/ShowLessonInfo';\r\nimport NavbarLesson from './Components/NavbarLesson';\r\n\r\nfunction AddNewOccupant(props) {\r\n\r\n    const { isLogin, setIsLogin, userInfo, setUserInfo } = props;\r\n    const [lessonData, setLessonData] = useState({});\r\n    const [year, setYear] = useState([]);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n    const [selectedStatus, setSelectedStatus] = useState(1);\r\n    const [selectedFloor, setSelectedFloor] = useState(null)\r\n\r\n    const [floor, setFloor] = useState([]);\r\n    const [roomDetail, setRoomDetail] = useState([])\r\n\r\n    const [occupantId, setOccupantId] = useState(\"\");\r\n    const [roomNumber, setRoomNumber] = useState(\"\");\r\n    const [occupantData, setOccupantData] = useState({});\r\n    const [motion, setMotion] = useState(true)\r\n\r\n\r\n    const fetchData = async () => {\r\n        try{\r\n            const lessorData = await axios.get(`/lessor/get/${userInfo.id}`);\r\n            setLessonData(lessorData.data.result);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchRoomData = async () => {\r\n        const body = {\r\n            Status: String(selectedStatus),\r\n            Floor: selectedFloor,\r\n        }\r\n        const getRoomLiveInOccupantDataByLessonId = await axios.post(`/Room/getRoomLiveInOccupantDataByLessonId/${userInfo.id}`, body);\r\n        // console.log(\"Hello\")\r\n        // console.log(getRoomLiveInOccupantDataByLessonId)\r\n        // console.log(getRoomLiveInOccupantDataByLessonId.data.OccupantRoomData)\r\n        setRoomDetail(getRoomLiveInOccupantDataByLessonId.data.OccupantRoomData)\r\n        // console.log(`Roomdetail = ${roomDetail.length}`)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"ACCESS_TOKEN_LESSON\")) {\r\n            // console.log(jwtDecode(localStorage.getItem(\"ACCESS_TOKEN_LESSON\")))\r\n            const user = jwtDecode(localStorage.getItem(\"ACCESS_TOKEN_LESSON\"))\r\n            user.role = \"Lesson\";\r\n            setIsLogin(true)\r\n            setUserInfo(user)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        // genYear();\r\n        genFloor();\r\n    }, [userInfo])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(selectedYear)\r\n        console.log(selectedMonth)\r\n        // handleSelectedYear();\r\n    }, [selectedYear])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchRoomData();\r\n    }, [lessonData, occupantData,motion])\r\n\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getOccupantData()\r\n    //     // handleSelectedYear();\r\n    // }, [occupantData])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////not use////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    // const genYear = () => {\r\n    //     const year = []\r\n    //     for (let i = new Date().getFullYear(); i > 1950; i--) {\r\n    //         year.push(i)\r\n    //     }\r\n    //     setYear(year);\r\n    // }\r\n\r\n    // const handleSelectedYear = (e) => {\r\n    //     // console.log(e.target.value)\r\n    //     setSelectedYear(e.target.value)\r\n    //     // console.log(selectedYear)\r\n    // }\r\n\r\n\r\n\r\n\r\n    // const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    // const handleSelectedMonth = (e) => {\r\n    //     console.log(e.target.value)\r\n    //     const monthIndex = months.findIndex(months => months === e.target.value);\r\n    //     console.log(monthIndex)\r\n    //     const monthValue = monthIndex + 1;\r\n    //     console.log(monthValue);\r\n    //     setSelectedMonth(monthValue)\r\n    // }\r\n\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // const genStatus = () => {\r\n    //     const status = [\"Old\", \"Current\"];\r\n    //     setStatus(status)\r\n    // }\r\n\r\n    const status = [\"Old\", \"Current\"];\r\n\r\n    const handleSelectedStatus = (e) => {\r\n        // console.log(e.target.value)\r\n        const StatusIndex = status.findIndex(status => status == e.target.value)\r\n        // console.log(StatusIndex)\r\n        setSelectedStatus(StatusIndex);\r\n        setMotion(!motion)\r\n        // console.log(selectedStatus)\r\n    }\r\n\r\n\r\n\r\n    const genFloor = async () => {\r\n        const body = {\r\n            status,\r\n        }\r\n        const Floor = await axios.post(`/room/getFloorByLessonId/${userInfo.id}`, body);\r\n        Floor.data.setRoomFloor.unshift(\"All\")\r\n        setFloor(Floor.data.setRoomFloor);\r\n        // console.log(Floor)\r\n    }\r\n    \r\n    \r\n    const handleSelectedFloor = (e) => {\r\n        console.log(e.target.value)\r\n        if(e.target.value == \"All\"){\r\n            setSelectedFloor(null)\r\n            setMotion(!motion)\r\n        }else{\r\n            setSelectedFloor(e.target.value)\r\n            setMotion(!motion)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////not use //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    const AddFloor = () => {\r\n        // const add = floor.push()\r\n        const add = [...floor, Math.max(...floor) + 1]\r\n        // console.log(floor)\r\n        // floor.push(6)\r\n        setFloor(add)\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    const textOccupantId = (e) => {\r\n        setOccupantId(e.target.value)\r\n    }\r\n\r\n    const textRoomNumber = (e) => {\r\n        setRoomNumber(e.target.value)\r\n    }\r\n\r\n    const [textFloor, setTextFloor] = useState(\"\")\r\n\r\n    const textFloorText = (e) => {\r\n        setTextFloor(e.target.value)\r\n    }\r\n\r\n    const getOccupantData = async () => {\r\n        try {\r\n            const result = await axios.get(`/Occupant/get/${occupantId}`)\r\n            setOccupantData(result.data.occupantData);\r\n        } catch (err){\r\n            alert(\"Don't have data of occupantId\")\r\n            setOccupantData({})\r\n            setOccupantId(\"\")\r\n        }\r\n    }\r\n\r\n\r\n    const addOccupantToRoom = async () => {\r\n        const body = {\r\n            RoomNumber: roomNumber,\r\n            Floor: textFloor,\r\n            // Status: true,\r\n            OccupantId: occupantId,\r\n            // DateCheckIn: new Date(),\r\n        }\r\n        // console.log(floor)\r\n        try{\r\n            const data = await axios.post(`/room/createRoom/${userInfo.id}`, body);\r\n            console.log(data);\r\n            setTextFloor(\"\")\r\n            setRoomNumber(\"\");\r\n            setOccupantId(\"\");\r\n            setOccupantData({});\r\n            setMotion(!motion)\r\n        } catch (error) {\r\n            // console.log(error)\r\n            alert('Room have occupant or Occupant have LiveIn Room')\r\n            setTextFloor(\"\")\r\n            setRoomNumber(\"\");\r\n            setOccupantId(\"\");\r\n            setOccupantData({});\r\n            setMotion(!motion)\r\n        }\r\n    }\r\n\r\n    const CheckOutLiveIn = async (RoomId,OccupantId) => {\r\n        // console.log(RoomId,OccupantId)\r\n        try{\r\n            const body = {\r\n                OccupantId,\r\n            }\r\n            const checkOutRoom = await axios.patch(`/LiveInRoute/editStatusAndCheckoutByRoomId/${RoomId}`,body);\r\n            setMotion(!motion)\r\n        } catch(e){\r\n            console.log(e)\r\n            alert(\"error\");\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const logLogLog = () => {\r\n        console.log(roomDetail)\r\n        console.log(`Roomdetail = ${roomDetail.length}`)\r\n        console.log(floor)\r\n        console.log(selectedFloor)\r\n        console.log(selectedStatus)\r\n        console.log(roomDetail)\r\n    }\r\n\r\n\r\n\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n        <div>\r\n            <NavbarLesson isLogin={isLogin} setIsLogin={setIsLogin} userInfo={userInfo} setUserInfo={setUserInfo} />\r\n            {/* This is AddNewOccupant */}\r\n            {lessonData ?\r\n                <ShowLessonInfo lessonData={lessonData} />\r\n                : null}\r\n\r\n            <hr />\r\n\r\n\r\n            {/* <select id=\"Year\" onChange={handleSelectedYear} defaultValue={selectedYear} >\r\n                {year.map(item => <option value={item}>{item}</option>)}\r\n                <option value=\"1950\">1950</option>\r\n            </select> */}\r\n\r\n            {/* <select id=\"Month\" onChange={handleSelectedMonth} defaultValue={months[selectedMonth - 1]}>\r\n                {months.map((item) => <option value={item}>{item}</option>)}\r\n            </select> */}\r\n\r\n            <select id=\"Status\" onChange={handleSelectedStatus} defaultValue={status[selectedStatus]}>\r\n                {status.map((item) => <option value={item}>{item}</option>)}\r\n            </select>\r\n\r\n            <select id=\"Floor\" onChange={handleSelectedFloor} defaultValue={selectedFloor}>\r\n                {floor.map((item) => <option value={item}>{item}</option>)}\r\n            </select>\r\n\r\n            <hr />\r\n\r\n\r\n            <label><strong>Add New Occupant</strong></label>\r\n            <table>\r\n                <tr>\r\n                    <th>Floor</th>\r\n                    <th>Room</th>\r\n                    <th>OccupantId</th>\r\n                    <th>Name</th>\r\n                    <th>Surname</th>\r\n                    <th>Mobile</th>\r\n                    <th>Add</th>\r\n                </tr>\r\n                <tr>\r\n                    <th><input placeholder=\"Floor\" value={textFloor} onChange={textFloorText} ></input></th>\r\n                    <th><input placeholder=\"Room Number\" value={roomNumber} onChange={textRoomNumber} ></input></th>\r\n                    <th><input placeholder=\"Occupant Id\" value={occupantId} onChange={textOccupantId} onBlur={getOccupantData}></input></th>\r\n                    <td>{occupantData.Name}</td>\r\n                    <td>{occupantData.Surname}</td>\r\n                    <td>{occupantData.Mobile}</td>\r\n                    <th><button onClick={addOccupantToRoom}>Add</button></th>\r\n                </tr>\r\n            </table>\r\n\r\n            <hr />\r\n\r\n            <table>\r\n                <tr>\r\n                    <th>Floor</th>\r\n                    <th>Room</th>\r\n                    <th>OccupantId</th>\r\n                    <th>Name</th>\r\n                    <th>Surname</th>\r\n                    <th>Mobile</th>\r\n                    <th>CheckOut</th>\r\n                </tr>\r\n\r\n                {roomDetail.length > 0 ?\r\n\r\n                    roomDetail.map(obj =>\r\n                        <tr>\r\n                            <td>{obj.Floor}</td>\r\n                            <td>{obj.RoomNumber}</td>\r\n                            {obj.Occupants.map(item =>\r\n                                <>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.Name}</td>\r\n                                    <td>{item.Surname}</td>\r\n                                    <td>{item.Mobile}</td>\r\n                             {item.LiveIn.Status ? <td><button onClick={()=>CheckOutLiveIn(obj.id,item.id)}>Check Out{/*obj.id*/}</button> </td> : <td> </td>} \r\n                                </>)}\r\n                        </tr>\r\n                    ) :\r\n                    null\r\n\r\n                }\r\n\r\n            </table>\r\n\r\n            {/* <button onClick={logLogLog}>log</button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOccupant\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\LessonFirstPage.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\component\\Navbar.js",["167"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <nav className=\"NavHome\">\r\n                    <ul>\r\n                        <li className=\"NavLi\"><a><Link to='/'>Home</Link></a></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\Components\\NavbarOccupant.js",["168","169","170","171"],"import React, { useState } from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport './NavbarOccupant.css'\r\n\r\nfunction NavbarOccupant(props) {\r\n\r\n    const { isLogin, setIsLogin, userInfo, setUserInfo } = props;\r\n    const [logout, setLogout] = useState(false);\r\n\r\n    const LogOut = () => {\r\n        localStorage.removeItem('ACCESS_TOKEN_OCCUPANT');\r\n        setUserInfo({});\r\n        setIsLogin(false);\r\n        setLogout(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <nav className=\"NavOccupant\">\r\n                    <ul className=\"ulOccupant\">\r\n                        <li className=\"Home\"><a><Link to='/OccupantFirstPage'>Home</Link></a></li>\r\n                        <li className=\"NavOccupantLi\"><a onClick={LogOut}>LogOut</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            {\r\n                logout ? <Redirect to='/'/> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarOccupant\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Occupant\\Components\\Input.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\InputPricePerUnit.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\component\\Input.js",["172"],"import React from 'react'\r\n\r\nfunction Input(props) {\r\n    const { textValue, name, value, type, login } = props\r\n\r\n    return (\r\n        <div>\r\n            <label>{name}</label>\r\n            <input type={type} onChange={textValue} value={value} placeholder={name} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\ShowSelected.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\ShowLessonInfo.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\Input.js",[],["173","174"],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Landing\\component\\Loginform.js",[],"C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\components\\Lesson\\Components\\NavbarLesson.js",["175","176","177","178","179","180","181"],"import React,{useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './NavbarLesson.css'\r\n\r\nfunction NavbarLesson(props) {\r\n\r\n    const { isLogin, setIsLogin, userInfo, setUserInfo } = props;\r\n    const [logout, setLogout] = useState(false)\r\n\r\n    const logoutNow = () => {\r\n        localStorage.removeItem(\"ACCESS_TOKEN_LESSON\");\r\n        setUserInfo({});\r\n        setLogout(true)\r\n        setIsLogin(false);\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <nav>\r\n                    <ul>\r\n                        <li><a><Link to='/LessonFirstPage'>Home</Link></a></li>\r\n                        <li><a><Link to='/AddNewOccupant'>Add Occupant</Link></a></li>\r\n                        <li><a><Link to='/MeterManage'>Meter Management</Link></a></li>\r\n                        <li><a><Link to='/OccupantMange'>Occupant Management</Link></a></li>\r\n                        <li><a onClick={logoutNow}>Log out</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n\r\n            {logout ? <Redirect to='/'/> : null}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarLesson\r\n","C:\\Users\\choco\\Documents\\Gridwhiz\\Dormitory-Personal_Project\\frontend\\src\\config\\axios.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"190","line":125,"column":11,"nodeType":"188","messageId":"189","endLine":125,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":46,"column":8,"nodeType":"193","endLine":46,"endColumn":10,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":51,"column":8,"nodeType":"193","endLine":51,"endColumn":18,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"197","line":55,"column":7,"nodeType":"193","endLine":55,"endColumn":65,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":77,"column":59,"nodeType":"201","messageId":"202","endLine":77,"endColumn":61},{"ruleId":"199","severity":1,"message":"200","line":85,"column":24,"nodeType":"201","messageId":"202","endLine":85,"endColumn":26},{"ruleId":"186","severity":1,"message":"190","line":100,"column":11,"nodeType":"188","messageId":"189","endLine":100,"endColumn":20},{"ruleId":"186","severity":1,"message":"203","line":106,"column":15,"nodeType":"188","messageId":"189","endLine":106,"endColumn":20},{"ruleId":"186","severity":1,"message":"204","line":107,"column":15,"nodeType":"188","messageId":"189","endLine":107,"endColumn":21},{"ruleId":"186","severity":1,"message":"205","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":13},{"ruleId":"186","severity":1,"message":"206","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":53,"column":66,"nodeType":"209","messageId":"210","endLine":53,"endColumn":68},{"ruleId":"186","severity":1,"message":"211","line":94,"column":11,"nodeType":"188","messageId":"189","endLine":94,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":97,"column":27,"nodeType":"201","messageId":"202","endLine":97,"endColumn":29},{"ruleId":"191","severity":1,"message":"212","line":122,"column":8,"nodeType":"193","endLine":122,"endColumn":10,"suggestions":"213"},{"ruleId":"191","severity":1,"message":"214","line":128,"column":8,"nodeType":"193","endLine":128,"endColumn":18,"suggestions":"215"},{"ruleId":"191","severity":1,"message":"216","line":134,"column":8,"nodeType":"193","endLine":134,"endColumn":51,"suggestions":"217"},{"ruleId":"191","severity":1,"message":"218","line":138,"column":7,"nodeType":"193","endLine":138,"endColumn":22,"suggestions":"219"},{"ruleId":"191","severity":1,"message":"220","line":142,"column":7,"nodeType":"193","endLine":142,"endColumn":13,"suggestions":"221"},{"ruleId":"199","severity":1,"message":"200","line":164,"column":58,"nodeType":"201","messageId":"202","endLine":164,"endColumn":60},{"ruleId":"186","severity":1,"message":"222","line":190,"column":11,"nodeType":"188","messageId":"189","endLine":190,"endColumn":21},{"ruleId":"186","severity":1,"message":"223","line":200,"column":15,"nodeType":"188","messageId":"189","endLine":200,"endColumn":33},{"ruleId":"199","severity":1,"message":"200","line":202,"column":24,"nodeType":"201","messageId":"202","endLine":202,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":269,"column":24,"nodeType":"201","messageId":"202","endLine":269,"endColumn":26},{"ruleId":"186","severity":1,"message":"224","line":274,"column":23,"nodeType":"188","messageId":"189","endLine":274,"endColumn":41},{"ruleId":"199","severity":1,"message":"200","line":288,"column":24,"nodeType":"201","messageId":"202","endLine":288,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":306,"column":24,"nodeType":"201","messageId":"202","endLine":306,"endColumn":26},{"ruleId":"186","severity":1,"message":"225","line":319,"column":15,"nodeType":"188","messageId":"189","endLine":319,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":320,"column":24,"nodeType":"201","messageId":"202","endLine":320,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":359,"column":27,"nodeType":"201","messageId":"202","endLine":359,"endColumn":29},{"ruleId":"186","severity":1,"message":"226","line":373,"column":12,"nodeType":"188","messageId":"189","endLine":373,"endColumn":31},{"ruleId":"186","severity":1,"message":"227","line":374,"column":11,"nodeType":"188","messageId":"189","endLine":374,"endColumn":25},{"ruleId":"186","severity":1,"message":"223","line":383,"column":15,"nodeType":"188","messageId":"189","endLine":383,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":383,"column":95,"nodeType":"209","messageId":"210","endLine":383,"endColumn":97},{"ruleId":"191","severity":1,"message":"192","line":26,"column":8,"nodeType":"193","endLine":26,"endColumn":10,"suggestions":"228"},{"ruleId":"191","severity":1,"message":"229","line":68,"column":8,"nodeType":"193","endLine":68,"endColumn":18,"suggestions":"230"},{"ruleId":"191","severity":1,"message":"220","line":72,"column":8,"nodeType":"193","endLine":72,"endColumn":37,"suggestions":"231"},{"ruleId":"186","severity":1,"message":"232","line":74,"column":11,"nodeType":"188","messageId":"189","endLine":74,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":94,"column":57,"nodeType":"201","messageId":"202","endLine":94,"endColumn":59},{"ruleId":"186","severity":1,"message":"233","line":103,"column":11,"nodeType":"188","messageId":"189","endLine":103,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":108,"column":11,"nodeType":"188","messageId":"189","endLine":108,"endColumn":20},{"ruleId":"186","severity":1,"message":"234","line":130,"column":19,"nodeType":"188","messageId":"189","endLine":130,"endColumn":25},{"ruleId":"186","severity":1,"message":"190","line":147,"column":11,"nodeType":"188","messageId":"189","endLine":147,"endColumn":20},{"ruleId":"186","severity":1,"message":"235","line":12,"column":12,"nodeType":"188","messageId":"189","endLine":12,"endColumn":16},{"ruleId":"186","severity":1,"message":"236","line":12,"column":18,"nodeType":"188","messageId":"189","endLine":12,"endColumn":25},{"ruleId":"186","severity":1,"message":"237","line":13,"column":26,"nodeType":"188","messageId":"189","endLine":13,"endColumn":41},{"ruleId":"186","severity":1,"message":"238","line":14,"column":27,"nodeType":"188","messageId":"189","endLine":14,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":62,"column":8,"nodeType":"193","endLine":62,"endColumn":10,"suggestions":"239"},{"ruleId":"191","severity":1,"message":"240","line":68,"column":8,"nodeType":"193","endLine":68,"endColumn":18,"suggestions":"241"},{"ruleId":"191","severity":1,"message":"242","line":75,"column":8,"nodeType":"193","endLine":75,"endColumn":22,"suggestions":"243"},{"ruleId":"191","severity":1,"message":"244","line":80,"column":8,"nodeType":"193","endLine":80,"endColumn":41,"suggestions":"245"},{"ruleId":"199","severity":1,"message":"200","line":139,"column":63,"nodeType":"201","messageId":"202","endLine":139,"endColumn":65},{"ruleId":"199","severity":1,"message":"200","line":161,"column":27,"nodeType":"201","messageId":"202","endLine":161,"endColumn":29},{"ruleId":"186","severity":1,"message":"246","line":175,"column":11,"nodeType":"188","messageId":"189","endLine":175,"endColumn":19},{"ruleId":"186","severity":1,"message":"247","line":246,"column":19,"nodeType":"188","messageId":"189","endLine":246,"endColumn":31},{"ruleId":"186","severity":1,"message":"190","line":264,"column":11,"nodeType":"188","messageId":"189","endLine":264,"endColumn":20},{"ruleId":"248","severity":1,"message":"249","line":11,"column":47,"nodeType":"250","endLine":11,"endColumn":50},{"ruleId":"186","severity":1,"message":"251","line":7,"column":13,"nodeType":"188","messageId":"189","endLine":7,"endColumn":20},{"ruleId":"186","severity":1,"message":"252","line":7,"column":34,"nodeType":"188","messageId":"189","endLine":7,"endColumn":42},{"ruleId":"248","severity":1,"message":"249","line":22,"column":46,"nodeType":"250","endLine":22,"endColumn":49},{"ruleId":"248","severity":1,"message":"249","line":23,"column":55,"nodeType":"250","endLine":23,"endColumn":75},{"ruleId":"186","severity":1,"message":"253","line":4,"column":43,"nodeType":"188","messageId":"189","endLine":4,"endColumn":48},{"ruleId":"182","replacedBy":"254"},{"ruleId":"184","replacedBy":"255"},{"ruleId":"186","severity":1,"message":"251","line":7,"column":13,"nodeType":"188","messageId":"189","endLine":7,"endColumn":20},{"ruleId":"186","severity":1,"message":"252","line":7,"column":34,"nodeType":"188","messageId":"189","endLine":7,"endColumn":42},{"ruleId":"248","severity":1,"message":"249","line":25,"column":29,"nodeType":"250","endLine":25,"endColumn":32},{"ruleId":"248","severity":1,"message":"249","line":26,"column":29,"nodeType":"250","endLine":26,"endColumn":32},{"ruleId":"248","severity":1,"message":"249","line":27,"column":29,"nodeType":"250","endLine":27,"endColumn":32},{"ruleId":"248","severity":1,"message":"249","line":28,"column":29,"nodeType":"250","endLine":28,"endColumn":32},{"ruleId":"248","severity":1,"message":"249","line":29,"column":29,"nodeType":"250","endLine":29,"endColumn":52},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logLogLog' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsLogin' and 'setUserInfo'. Either include them or remove the dependency array.","ArrayExpression",["258"],"React Hook useEffect has missing dependencies: 'fetchData' and 'fetchDataMonthlyValue'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has a missing dependency: 'fetchDataMonthlyValue'. Either include it or remove the dependency array.",["260"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hello' is assigned a value but never used.","'hello1' is assigned a value but never used.","'Input' is defined but never used.","'jwtDecode' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'fetchLastMonthValueData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'genYear', 'setIsLogin', and 'setUserInfo'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'fetchData', 'fetchMonthlyValueData', and 'genFloor'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'electricityPricePerUnit', 'fetchMonthlyValueData', 'lastMonthlyValueData', 'monthlyValueData', and 'waterPricePerUnit'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has a missing dependency: 'initialCreateMonthlyValue'. Either include it or remove the dependency array.",["264"],"React Hook useEffect has a missing dependency: 'fetchMonthlyValueData'. Either include it or remove the dependency array.",["265"],"'showLogLog' is assigned a value but never used.","'newNewMonthlyValue' is assigned a value but never used.","'newWaterMeterValue' is assigned a value but never used.","'newMonthlyValueData' is assigned a value but never used.","'newLastMonthlyValue' is assigned a value but never used.","'reArrangeArray' is assigned a value but never used.",["266"],"React Hook useEffect has missing dependencies: 'fetchData', 'fetchLessorData', and 'fetchMonthlyValueData'. Either include them or remove the dependency array.",["267"],["268"],"'logout' is assigned a value but never used.","'logHello' is assigned a value but never used.","'result' is assigned a value but never used.","'year' is assigned a value but never used.","'setYear' is assigned a value but never used.","'setSelectedYear' is assigned a value but never used.","'setSelectedMonth' is assigned a value but never used.",["269"],"React Hook useEffect has missing dependencies: 'fetchData' and 'genFloor'. Either include them or remove the dependency array.",["270"],"React Hook useEffect has a missing dependency: 'selectedMonth'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'fetchRoomData'. Either include it or remove the dependency array.",["272"],"'AddFloor' is assigned a value but never used.","'checkOutRoom' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isLogin' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'login' is assigned a value but never used.",["256"],["257"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"273","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"273","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [setIsLogin, setUserInfo]",{"range":"301","text":"302"},"Update the dependencies array to be: [fetchData, fetchDataMonthlyValue, userInfo]",{"range":"303","text":"304"},"Update the dependencies array to be: [pushButton, selectedMonth, selectedYear, monthlyValueData, fetchDataMonthlyValue]",{"range":"305","text":"306"},"Update the dependencies array to be: [genYear, setIsLogin, setUserInfo]",{"range":"307","text":"308"},"Update the dependencies array to be: [fetchData, fetchMonthlyValueData, genFloor, userInfo]",{"range":"309","text":"310"},"Update the dependencies array to be: [selectedYear, selectedMonth, selectedFloor, electricityPricePerUnit, waterPricePerUnit, monthlyValueData, lastMonthlyValueData, fetchMonthlyValueData]",{"range":"311","text":"312"},"Update the dependencies array to be: [initialCreateMonthlyValue, selectedMonth]",{"range":"313","text":"314"},"Update the dependencies array to be: [blur, fetchMonthlyValueData]",{"range":"315","text":"316"},{"range":"317","text":"302"},"Update the dependencies array to be: [fetchData, fetchLessorData, fetchMonthlyValueData, userInfo]",{"range":"318","text":"319"},"Update the dependencies array to be: [fetchMonthlyValueData, selectedMonth, selectedYear]",{"range":"320","text":"321"},{"range":"322","text":"302"},"Update the dependencies array to be: [fetchData, genFloor, userInfo]",{"range":"323","text":"324"},"Update the dependencies array to be: [selectedMonth, selectedYear]",{"range":"325","text":"326"},"Update the dependencies array to be: [lessonData, occupantData, motion, fetchRoomData]",{"range":"327","text":"328"},[1866,1868],"[setIsLogin, setUserInfo]",[1959,1969],"[fetchData, fetchDataMonthlyValue, userInfo]",[2035,2093],"[pushButton, selectedMonth, selectedYear, monthlyValueData, fetchDataMonthlyValue]",[4784,4786],"[genYear, setIsLogin, setUserInfo]",[4898,4908],"[fetchData, fetchMonthlyValueData, genFloor, userInfo]",[5145,5188],"[selectedYear, selectedMonth, selectedFloor, electricityPricePerUnit, waterPricePerUnit, monthlyValueData, lastMonthlyValueData, fetchMonthlyValueData]",[5262,5277],"[initialCreateMonthlyValue, selectedMonth]",[5347,5353],"[blur, fetchMonthlyValueData]",[1119,1121],[2307,2317],"[fetchData, fetchLessorData, fetchMonthlyValueData, userInfo]",[2386,2415],"[fetchMonthlyValueData, selectedMonth, selectedYear]",[2345,2347],[2448,2458],"[fetchData, genFloor, userInfo]",[2600,2614],"[selectedMonth, selectedYear]",[2677,2710],"[lessonData, occupantData, motion, fetchRoomData]"]